name: Update Amazon IVS Player SDK

on:
  schedule:
    - cron: '0 0 * * *' # Run daily at midnight UTC
  workflow_dispatch: # Allow manual triggering

jobs:
  update-ivs-player:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Check for updates
        id: check-updates
        run: |
          # Get latest version from npm
          LATEST_VERSION=$(npm view amazon-ivs-player version)
          echo "Latest version from npm: $LATEST_VERSION"

          # Find all files with player.live-video.net references
          FILES_WITH_SDK=$(grep -r "player\.live-video\.net/[0-9]\+\.[0-9]\+\.[0-9]\+" . --include="*.html" --include="*.js" --exclude-dir=.git --exclude-dir=node_modules -l)
          
          if [ -z "$FILES_WITH_SDK" ]; then
            echo "No files found with SDK references"
            echo "has_update=false" >> $GITHUB_OUTPUT
            exit 0
          fi

          # Extract current version from first file found
          CURRENT_VERSION=$(grep -oP 'player\.live-video\.net/\K[0-9]+\.[0-9]+\.[0-9]+' $FILES_WITH_SDK | head -1)
          echo "Current version in files: $CURRENT_VERSION"

          # Compare versions
          if [ "$CURRENT_VERSION" != "$LATEST_VERSION" ]; then
            echo "Update available: $CURRENT_VERSION -> $LATEST_VERSION"
            echo "has_update=true" >> $GITHUB_OUTPUT
            echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
            echo "new_version=$LATEST_VERSION" >> $GITHUB_OUTPUT
            
            # Save list of files for PR body
            echo "FILES_LIST<<EOF" >> $GITHUB_OUTPUT
            echo "$FILES_WITH_SDK" | sed 's/^\.\//- `/' | sed 's/$/`/' >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
            
            # Count files
            FILE_COUNT=$(echo "$FILES_WITH_SDK" | wc -l)
            echo "file_count=$FILE_COUNT" >> $GITHUB_OUTPUT
            
            # List all files that will be updated
            echo "Files to be updated ($FILE_COUNT):"
            echo "$FILES_WITH_SDK"
            
            # Update all files with the new version
            echo "$FILES_WITH_SDK" | while read -r file; do
              echo "Updating: $file"
              sed -i "s|player\.live-video\.net/$CURRENT_VERSION|player.live-video.net/$LATEST_VERSION|g" "$file"
            done
            
            # Verify updates
            echo ""
            echo "Verification of updated files:"
            UPDATED_COUNT=$(grep -r "player\.live-video\.net/$LATEST_VERSION" . --include="*.html" --include="*.js" --exclude-dir=.git --exclude-dir=node_modules -l | wc -l)
            OLD_COUNT=$(grep -r "player\.live-video\.net/$CURRENT_VERSION" . --include="*.html" --include="*.js" --exclude-dir=.git --exclude-dir=node_modules -l | wc -l || echo 0)
            echo "Files with new version ($LATEST_VERSION): $UPDATED_COUNT"
            echo "Files with old version ($CURRENT_VERSION): $OLD_COUNT"
            
            if [ "$OLD_COUNT" -ne 0 ]; then
              echo "WARNING: Some files still contain the old version!"
              exit 1
            fi
          else
            echo "No update available - already on latest version: $CURRENT_VERSION"
            echo "has_update=false" >> $GITHUB_OUTPUT
          fi

      - name: Create Pull Request
        if: steps.check-updates.outputs.has_update == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: 'chore: update Amazon IVS Player SDK to ${{ steps.check-updates.outputs.new_version }}'
          title: 'chore: update Amazon IVS Player SDK to ${{ steps.check-updates.outputs.new_version }}'
          body: |
            This PR updates the Amazon IVS Player SDK from ${{ steps.check-updates.outputs.current_version }} to ${{ steps.check-updates.outputs.new_version }}.

            ## Changes

            This workflow automatically scans the repository for all files containing references to `player.live-video.net` CDN and updates them to the latest version.

            **${{ steps.check-updates.outputs.file_count }} file(s) were updated:**

            ${{ steps.check-updates.outputs.FILES_LIST }}

            ## How It Works

            The workflow:
            1. Checks npm for the latest version of `amazon-ivs-player`
            2. Searches the repository for all `.html` and `.js` files containing `player.live-video.net` references
            3. Updates all version numbers in these files to match the latest version
            4. Verifies all files were updated successfully before creating this PR

            ## Testing Recommendations

            Please verify that all demos work correctly with the new SDK version:
            - Test video playback in each demo
            - Verify custom controls and UI functionality
            - Check any VideoJS integrations
            - Test service worker functionality if applicable
            - Verify all interactive features (quiz, canvas, etc.)

            ---

            **Release Notes:** https://www.npmjs.com/package/amazon-ivs-player?activeTab=versions
            
            This update was automatically generated by the dependency update workflow.
          branch: dependency-update/amazon-ivs-player-sdk
          delete-branch: true
          labels: |
            dependencies
            automated-pr
